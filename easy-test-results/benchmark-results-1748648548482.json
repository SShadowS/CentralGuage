[
  {
    "taskId": "CG-AL-E001",
    "model": "mock-gpt-4",
    "attempts": [
      {
        "attempt": 1,
        "llmResponse": {
          "content": "Here's the AL code that implements the requested functionality:\n\nBEGIN-CODE\ncodeunit 70000 \"Inventory Calculator\"\n{\n    Access = Public;\n\n    procedure CalculateInventoryValue(): Decimal\n    var\n        Item: Record Item;\n        TotalValue: Decimal;\n    begin\n        TotalValue := 0;\n        \n        if Item.FindSet() then\n            repeat\n                TotalValue += Item.\"Unit Cost\" * Item.Inventory;\n            until Item.Next() = 0;\n            \n        exit(TotalValue);\n    end;\n}\nEND-CODE\n\nThis code follows Business Central AL conventions and should compile successfully.",
          "model": "mock-gpt-4",
          "usage": {
            "promptTokens": 220,
            "completionTokens": 146,
            "totalTokens": 366,
            "estimatedCost": 0
          },
          "duration": 1923,
          "finishReason": "stop"
        },
        "generatedCode": "codeunit 70000 \"Inventory Calculator\"\n{\n    Access = Public;\n\n    procedure CalculateInventoryValue(): Decimal\n    var\n        Item: Record Item;\n        TotalValue: Decimal;\n    begin\n        TotalValue := 0;\n        \n        if Item.FindSet() then\n            repeat\n                TotalValue += Item.\"Unit Cost\" * Item.Inventory;\n            until Item.Next() = 0;\n            \n        exit(TotalValue);\n    end;\n}",
        "compilationResult": {
          "success": true,
          "errors": [],
          "warnings": [],
          "output": "Microsoft (R) AL Compiler version 13.0.0.0\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n\nCompilation completed successfully.\n",
          "duration": 1506,
          "artifactPath": "easy-test-results/temp/CG-AL-E001_attempt_1/bin/app.app"
        },
        "passed": true,
        "score": 1
      }
    ],
    "finalResult": "pass",
    "passAttempt": 1,
    "totalDuration": 2916,
    "aggregateScore": 1,
    "metadata": {
      "templateUsed": "code-gen.md",
      "fixTemplateUsed": "bugfix.md",
      "totalTokens": 366,
      "totalCost": 0,
      "executionTime": "2025-05-30T23:42:16.365Z"
    }
  },
  {
    "taskId": "CG-AL-E002",
    "model": "mock-gpt-4",
    "attempts": [
      {
        "attempt": 1,
        "llmResponse": {
          "content": "Here's the AL code that implements the requested functionality:\n\nBEGIN-CODE\npage 70100 \"Customer API\"\n{\n    PageType = API;\n    APIPublisher = 'mycompany';\n    APIGroup = 'customers';\n    APIVersion = 'v1.0';\n    EntityName = 'customer';\n    EntitySetName = 'customers';\n    SourceTable = Customer;\n    DelayedInsert = true;\n    ODataKeyFields = SystemId;\n\n    layout\n    {\n        area(Content)\n        {\n            repeater(Records)\n            {\n                field(id; Rec.SystemId)\n                {\n                    Caption = 'Id';\n                    Editable = false;\n                }\n                field(number; Rec.\"No.\")\n                {\n                    Caption = 'Number';\n                }\n                field(displayName; Rec.Name)\n                {\n                    Caption = 'Display Name';\n                }\n            }\n        }\n    }\n}\nEND-CODE\n\nThis code follows Business Central AL conventions and should compile successfully.",
          "model": "mock-gpt-4",
          "usage": {
            "promptTokens": 234,
            "completionTokens": 242,
            "totalTokens": 476,
            "estimatedCost": 0
          },
          "duration": 844,
          "finishReason": "stop"
        },
        "generatedCode": "page 70100 \"Customer API\"\n{\n    PageType = API;\n    APIPublisher = 'mycompany';\n    APIGroup = 'customers';\n    APIVersion = 'v1.0';\n    EntityName = 'customer';\n    EntitySetName = 'customers';\n    SourceTable = Customer;\n    DelayedInsert = true;\n    ODataKeyFields = SystemId;\n\n    layout\n    {\n        area(Content)\n        {\n            repeater(Records)\n            {\n                field(id; Rec.SystemId)\n                {\n                    Caption = 'Id';\n                    Editable = false;\n                }\n                field(number; Rec.\"No.\")\n                {\n                    Caption = 'Number';\n                }\n                field(displayName; Rec.Name)\n                {\n                    Caption = 'Display Name';\n                }\n            }\n        }\n    }\n}",
        "compilationResult": {
          "success": true,
          "errors": [],
          "warnings": [],
          "output": "Microsoft (R) AL Compiler version 13.0.0.0\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n\nCompilation completed successfully.\n",
          "duration": 1507,
          "artifactPath": "easy-test-results/temp/CG-AL-E002_attempt_1/bin/app.app"
        },
        "passed": true,
        "score": 1
      }
    ],
    "finalResult": "pass",
    "passAttempt": 1,
    "totalDuration": 3145,
    "aggregateScore": 1,
    "metadata": {
      "templateUsed": "code-gen.md",
      "fixTemplateUsed": "bugfix.md",
      "totalTokens": 476,
      "totalCost": 0,
      "executionTime": "2025-05-30T23:42:19.510Z"
    }
  },
  {
    "taskId": "CG-AL-E003",
    "model": "mock-gpt-4",
    "attempts": [
      {
        "attempt": 1,
        "llmResponse": {
          "content": "Here's the AL code that implements the requested functionality:\n\nBEGIN-CODE\ncodeunit 70000 \"Inventory Calculator\"\n{\n    Access = Public;\n\n    procedure CalculateInventoryValue(): Decimal\n    var\n        Item: Record Item;\n        TotalValue: Decimal;\n    begin\n        TotalValue := 0;\n        \n        if Item.FindSet() then\n            repeat\n                TotalValue += Item.\"Unit Cost\" * Item.Inventory;\n            until Item.Next() = 0;\n            \n        exit(TotalValue);\n    end;\n}\nEND-CODE\n\nThis code follows Business Central AL conventions and should compile successfully.",
          "model": "mock-gpt-4",
          "usage": {
            "promptTokens": 208,
            "completionTokens": 146,
            "totalTokens": 354,
            "estimatedCost": 0
          },
          "duration": 1697,
          "finishReason": "stop"
        },
        "generatedCode": "codeunit 70000 \"Inventory Calculator\"\n{\n    Access = Public;\n\n    procedure CalculateInventoryValue(): Decimal\n    var\n        Item: Record Item;\n        TotalValue: Decimal;\n    begin\n        TotalValue := 0;\n        \n        if Item.FindSet() then\n            repeat\n                TotalValue += Item.\"Unit Cost\" * Item.Inventory;\n            until Item.Next() = 0;\n            \n        exit(TotalValue);\n    end;\n}",
        "compilationResult": {
          "success": true,
          "errors": [],
          "warnings": [],
          "output": "Microsoft (R) AL Compiler version 13.0.0.0\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n\nCompilation completed successfully.\n",
          "duration": 1505,
          "artifactPath": "easy-test-results/temp/CG-AL-E003_attempt_1/bin/app.app"
        },
        "passed": true,
        "score": 1
      }
    ],
    "finalResult": "pass",
    "passAttempt": 1,
    "totalDuration": 3022,
    "aggregateScore": 1,
    "metadata": {
      "templateUsed": "code-gen.md",
      "fixTemplateUsed": "bugfix.md",
      "totalTokens": 354,
      "totalCost": 0,
      "executionTime": "2025-05-30T23:42:22.532Z"
    }
  },
  {
    "taskId": "CG-AL-E004",
    "model": "mock-gpt-4",
    "attempts": [
      {
        "attempt": 1,
        "llmResponse": {
          "content": "Here's the AL code that implements the requested functionality:\n\nBEGIN-CODE\ntableextension 70200 \"Customer Extension\" extends Customer\n{\n    fields\n    {\n        field(70200; \"Customer Rating\"; Option)\n        {\n            Caption = 'Customer Rating';\n            OptionMembers = \"Not Rated\",Bronze,Silver,Gold,Platinum;\n            OptionCaption = 'Not Rated,Bronze,Silver,Gold,Platinum';\n            DataClassification = CustomerContent;\n        }\n        field(70201; \"Loyalty Points\"; Integer)\n        {\n            Caption = 'Loyalty Points';\n            DataClassification = CustomerContent;\n            MinValue = 0;\n        }\n    }\n}\nEND-CODE\n\nThis code follows Business Central AL conventions and should compile successfully.",
          "model": "mock-gpt-4",
          "usage": {
            "promptTokens": 251,
            "completionTokens": 183,
            "totalTokens": 434,
            "estimatedCost": 0
          },
          "duration": 2563,
          "finishReason": "stop"
        },
        "generatedCode": "tableextension 70200 \"Customer Extension\" extends Customer\n{\n    fields\n    {\n        field(70200; \"Customer Rating\"; Option)\n        {\n            Caption = 'Customer Rating';\n            OptionMembers = \"Not Rated\",Bronze,Silver,Gold,Platinum;\n            OptionCaption = 'Not Rated,Bronze,Silver,Gold,Platinum';\n            DataClassification = CustomerContent;\n        }\n        field(70201; \"Loyalty Points\"; Integer)\n        {\n            Caption = 'Loyalty Points';\n            DataClassification = CustomerContent;\n            MinValue = 0;\n        }\n    }\n}",
        "compilationResult": {
          "success": true,
          "errors": [],
          "warnings": [],
          "output": "Microsoft (R) AL Compiler version 13.0.0.0\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n\nCompilation completed successfully.\n",
          "duration": 1504,
          "artifactPath": "easy-test-results/temp/CG-AL-E004_attempt_1/bin/app.app"
        },
        "passed": true,
        "score": 1
      }
    ],
    "finalResult": "pass",
    "passAttempt": 1,
    "totalDuration": 2773,
    "aggregateScore": 1,
    "metadata": {
      "templateUsed": "code-gen.md",
      "fixTemplateUsed": "bugfix.md",
      "totalTokens": 434,
      "totalCost": 0,
      "executionTime": "2025-05-30T23:42:25.305Z"
    }
  },
  {
    "taskId": "CG-AL-E005",
    "model": "mock-gpt-4",
    "attempts": [
      {
        "attempt": 1,
        "llmResponse": {
          "content": "Here's the AL code that implements the requested functionality:\n\nBEGIN-CODE\npage 70100 \"Customer API\"\n{\n    PageType = API;\n    APIPublisher = 'mycompany';\n    APIGroup = 'customers';\n    APIVersion = 'v1.0';\n    EntityName = 'customer';\n    EntitySetName = 'customers';\n    SourceTable = Customer;\n    DelayedInsert = true;\n    ODataKeyFields = SystemId;\n\n    layout\n    {\n        area(Content)\n        {\n            repeater(Records)\n            {\n                field(id; Rec.SystemId)\n                {\n                    Caption = 'Id';\n                    Editable = false;\n                }\n                field(number; Rec.\"No.\")\n                {\n                    Caption = 'Number';\n                }\n                field(displayName; Rec.Name)\n                {\n                    Caption = 'Display Name';\n                }\n            }\n        }\n    }\n}\nEND-CODE\n\nThis code follows Business Central AL conventions and should compile successfully.",
          "model": "mock-gpt-4",
          "usage": {
            "promptTokens": 268,
            "completionTokens": 242,
            "totalTokens": 510,
            "estimatedCost": 0
          },
          "duration": 2706,
          "finishReason": "stop"
        },
        "generatedCode": "page 70100 \"Customer API\"\n{\n    PageType = API;\n    APIPublisher = 'mycompany';\n    APIGroup = 'customers';\n    APIVersion = 'v1.0';\n    EntityName = 'customer';\n    EntitySetName = 'customers';\n    SourceTable = Customer;\n    DelayedInsert = true;\n    ODataKeyFields = SystemId;\n\n    layout\n    {\n        area(Content)\n        {\n            repeater(Records)\n            {\n                field(id; Rec.SystemId)\n                {\n                    Caption = 'Id';\n                    Editable = false;\n                }\n                field(number; Rec.\"No.\")\n                {\n                    Caption = 'Number';\n                }\n                field(displayName; Rec.Name)\n                {\n                    Caption = 'Display Name';\n                }\n            }\n        }\n    }\n}",
        "compilationResult": {
          "success": true,
          "errors": [],
          "warnings": [],
          "output": "Microsoft (R) AL Compiler version 13.0.0.0\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n\nCompilation completed successfully.\n",
          "duration": 1498,
          "artifactPath": "easy-test-results/temp/CG-AL-E005_attempt_1/bin/app.app"
        },
        "passed": true,
        "score": 1
      }
    ],
    "finalResult": "pass",
    "passAttempt": 1,
    "totalDuration": 3177,
    "aggregateScore": 1,
    "metadata": {
      "templateUsed": "code-gen.md",
      "fixTemplateUsed": "bugfix.md",
      "totalTokens": 510,
      "totalCost": 0,
      "executionTime": "2025-05-30T23:42:28.482Z"
    }
  }
]